@using Microsoft.AspNetCore.Identity
@using Service
@using WebRepairService.Components
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Главная страница";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">Добро пожаловать в систему обработки заказов сервисного центра!</h1>

    @if (User?.Identity?.IsAuthenticated == true)
    {
        <div class="alert alert-success text-center">
            <p>Вы вошли как: <strong>@User.Identity.Name</strong></p>
        </div>

        <ul class="nav flex-column">
            @{
                var user = await UserManager.GetUserAsync(User);
                if (user != null)
                {
                    @if (await UserManager.IsInRoleAsync(user, "Admin"))
                    {
                        <!-- Меню администратора -->
                    }
                    @if (await UserManager.IsInRoleAsync(user, "Operator"))
                    {
                        <!-- Меню оператора -->
                    }
                    @if (await UserManager.IsInRoleAsync(user, "Engineer"))
                    {
                        <!-- Меню инженера -->
                    }
                    @if (await UserManager.HasNoRolesAsync(user))
                    {
                        <h3>Администратор еще не выдал Вам роль. Необходимо подождать верификацию вашего аккаунта</h3>
                    }
                }
            }
        </ul>
    }
    else
    {
        <script>
            window.location.href = '@Url.Action("Login", "Account")';
        </script>

        <!-- Запасной вариант, если JavaScript отключен -->
        <meta http-equiv="refresh" content="0;url=@Url.Action("Login", "Account")" />
        <p class="text-center">Перенаправление на страницу входа...</p>
    }
</div>
