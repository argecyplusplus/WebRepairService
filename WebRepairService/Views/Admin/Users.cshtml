@using WebRepairService.Controllers
@model List<UserRoleViewModel>
@{
    ViewData["Title"] = "Управление пользователями";
    var allRoles = ViewBag.AllRoles as List<string>;
}

<div class="users-management-container">
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas me-2"></i>Управление пользователями
        </h1>
        <div class="total-users">Всего пользователей: @Model.Count</div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Общий блок для поиска и фильтров -->
    <div class="service-controls">
        <div class="search-filter-panel">
            <div class="input-group search-input-group">
                <span class="input-group-text"><i class="fas fa-search"></i></span>
                <input type="text" id="searchInput" class="form-control search-input" placeholder="Поиск по имени или логину...">
            </div>
        </div>

        <div class="filter-col">
            <div class="input-group filter-input-group">
                <select id="roleFilter" class="form-select filter-select">
                    <option value="">Все роли</option>
                    @foreach (var role in allRoles)
                    {
                        <option value="@role">@role</option>
                    }
                    <option value="no-role">Без роли</option>
                </select>
            </div>
        </div>
    </div>

    <div class="users-list">
        @foreach (var user in Model)
        {
            <div class="user-card"
                 data-username="@user.Username.ToLower()"
                 data-fullname="@user.FullName?.ToLower()"
                 data-roles="@string.Join(",", user.Roles)">
                <div class="user-header">
                    <div class="user-avatar">
                        @if (!string.IsNullOrEmpty(user.ProfileImage))
                        {
                            <div class="avatar-circle @(user.Roles.Any() ? "has-role" : "no-role")">
                                <img src="@Url.Content(user.ProfileImage)" alt="Аватар @user.FullName" class="avatar-image" />
                            </div>
                        }
                        else
                        {
                            <div class="avatar-circle @(user.Roles.Any() ? "has-role" : "no-role")">
                                <i class="fas fa-user"></i>
                            </div>
                        }
                    </div>
                    <div class="user-main-info">
                        <h3 class="username" title="@user.Username">@user.Username</h3>
                        <div class="user-meta">
                            <span class="user-fullname" title="@user.FullName">@user.FullName</span>
                        </div>
                    </div>
                    <div class="user-status-badge">
                        @if (user.Roles.Any())
                        {
                            <span class="badge bg-light text-dark">@string.Join(", ", user.Roles)</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Без роли</span>
                        }
                    </div>
                </div>

                <div class="user-contacts">
                    <div class="contact-item">
                        <i class="fas fa-envelope me-2"></i>
                        <a href="mailto:@user.Email">@user.Email</a>
                    </div>
                    @if (!string.IsNullOrEmpty(user.PhoneNumber))
                    {
                        <div class="contact-item">
                            <i class="fas fa-phone me-2"></i>
                            <a href="tel:@user.PhoneNumber">@user.PhoneNumber</a>
                        </div>
                    }
                    <div class="contact-item">
                        <i class="fas fa-calendar-alt me-2"></i>
                        <span>Зарегистрирован: @user.RegistrationDate.ToString("dd.MM.yyyy")</span>
                    </div>
                </div>

                <div class="user-controls">
                    <form asp-action="SetRole" method="post" class="role-form">
                        <input type="hidden" name="userId" value="@user.UserId" />
                        <div class="role-control-group">
                            <select name="selectedRole" class="role-select">
                                <option value="">Без роли</option>
                                @foreach (var role in allRoles)
                                {
                                    <option value="@role" selected="@(user.Roles.Contains(role) ? "selected" : null)">
                                        @role
                                    </option>
                                }
                            </select>
                            <button type="submit" class="btn-save-role" title="Сохранить роль">
                                <i class="fas fa-check"></i>
                            </button>
                        </div>
                    </form>

                    <button class="btn btn-danger delete-user"
                            data-userid="@user.UserId"
                            data-username="@user.Username"
                            title="Удалить пользователя">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        /* Основные стили */
        .users-management-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .page-title {
            font-size: 2rem;
            color: #2f4f4f;
            margin: 0;
            font-weight: 600;
            display: flex;
            align-items: center;
        }

        .total-users {
            background-color: #e6f4ec;
            padding: 0.5rem 1rem;
            border-radius: 1rem;
            font-size: 0.9rem;
            color: #1d3c34;
        }

        /* Аватарки пользователей */
        .avatar-circle {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            flex-shrink: 0;
            overflow: hidden;
            position: relative;
        }

        .avatar-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .avatar-circle.has-role {
            border: 2px solid #9fceb6;
        }

        .avatar-circle.no-role {
            border: 2px solid #ddd;
        }

        /* Стили для управления ролями */
        .role-control-group {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .role-select {
            width: 160px; 
            padding: 0.375rem 0.75rem;
            font-size: 0.9rem;
            border: 1px solid #ced4da;
            border-radius: 0.5rem;
            background-color: white;
            color: #495057;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            text-align: left; 
        }

            .role-select:focus {
                border-color: #9fceb6;
                outline: 0;
                box-shadow: 0 0 0 0.2rem rgba(159, 206, 182, 0.25);
            }

        .btn-save-role {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            background-color: #9fceb6;
            color: white;
            border: none;
            transition: all 0.2s ease;
            cursor: pointer;
        }

            .btn-save-role:hover {
                background-color: #8abda5;
                transform: scale(1.05);
            }

            .btn-save-role:active {
                transform: scale(0.98);
            }


        /* Общий блок для поиска и фильтров */
        .service-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            gap: 1.5rem;
        }

        /* Поисковая строка */
        .search-filter-panel {
            flex-grow: 1;
        }

        .search-input-group,
        .filter-input-group {
            height: 45px;
            border-radius: 0.7rem;
            overflow: hidden;
            border: 1px solid #9fceb6;
            box-shadow: 0 1px 4px rgba(0, 0, 0, 0.05);
            background-color: #ffffff;
        }

        .search-input,
        .filter-select {
            border: none;
            outline: none;
            box-shadow: none;
            background-color: #ffffff;
            color: #2f4f4f;
            font-size: 1rem;
            height: 100%;
        }

        .input-group-text {
            background-color: #e6f4ec;
            border: none;
            color: #1d3c34;
            font-weight: 500;
        }

        /* Фильтр по ролям */
        .filter-col {
            min-width: 200px;
        }

        /* Карточка пользователя */
        .users-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
        }

        .user-card {
            background: white;
            border-radius: 0.75rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            padding: 1.5rem;
            border-left: 4px solid #9fceb6;
            transition: all 0.3s ease;
            display: flex;
            flex-direction: column;
            height: 100%;
        }

            .user-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.12);
            }

        /* Шапка карточки */
        .user-header {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .avatar-circle {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            flex-shrink: 0;
        }

            .avatar-circle.has-role {
                background-color: #e6f4ec;
                color: #1d3c34;
                border: 2px solid #9fceb6;
            }

            .avatar-circle.no-role {
                background-color: #f5f5f5;
                color: #777;
                border: 2px solid #ddd;
            }

        .user-main-info {
            flex: 1;
            min-width: 0;
        }

        .username {
            font-size: 1.25rem;
            margin: 0 0 0.25rem 0;
            color: #1d3c34;
            font-weight: 600;
            word-break: break-word;
        }

        .user-meta {
            display: flex;
            flex-direction: column;
            gap: 0.3rem;
            font-size: 0.9rem;
            color: #666;
        }

        .user-fullname {
            white-space: normal;
            overflow: visible;
            display: block;
        }

        .user-status-badge {
            margin-top: 0.25rem;
            align-self: flex-start;
            flex-shrink: 0;
        }

        /* Контакты */
        .user-contacts {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: center;
            gap: 0.75rem;
            padding: 1rem 0;
            margin: 0.5rem 0;
            border-top: 1px solid #f0f0f0;
            border-bottom: 1px solid #f0f0f0;
            min-height: 80px;
        }

        .contact-item {
            display: flex;
            align-items: center;
            font-size: 0.95rem;
            color: #555; 
        }

            .contact-item a {
                color: #2f4f4f;
                text-decoration: none;
                transition: color 0.2s;
            }

                .contact-item a:hover {
                    color: #1d3c34;
                    text-decoration: underline;
                }

            .contact-item i {
                color: #9fceb6;
                width: 1.25rem;
                flex-shrink: 0;
                text-align: center;
            }

        /* Управление пользователями */
        .user-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 1rem;
        }

        .role-form {
            flex: 1;
            min-width: 0;
        }

        .input-group {
            display: flex;
            gap: 0.5rem;
        }

        .form-select {
            border-radius: 0.5rem !important;
            border: 1px solid #ddd;
            transition: all 0.3s ease;
            flex: 1;
            min-width: 0;
        }

            .form-select:focus {
                border-color: #9fceb6;
                box-shadow: 0 0 0 0.25rem rgba(159, 206, 182, 0.25);
            }

        .btn {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            transition: all 0.3s ease;
            flex-shrink: 0;
        }

        .btn-success {
            background-color: #9fceb6;
            border-color: #9fceb6;
        }

            .btn-success:hover {
                background-color: #8abda5;
                border-color: #8abda5;
            }

        .btn-danger {
            background-color: #f8d7da;
            border-color: #f8d7da;
            color: #721c24;
        }

            .btn-danger:hover {
                background-color: #f5c6cb;
                border-color: #f5c6cb;
                color: #721c24;
            }

        /* Анимации */
        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .user-card {
            animation: fadeIn 0.4s ease-out forwards;
        }

            .user-card.hidden {
                display: none;
            }

        /* Адаптивность */
        @@media (max-width: 768px) {
            .service-controls {
                flex-direction: column;
                align-items: stretch;
                gap: 1rem;
            }

            .filter-col {
                width: 100%;
            }

            .users-list {
                grid-template-columns: 1fr;
            }
        }
    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function() {
            // Автоматическое скрытие алертов через 5 секунд
            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);

            // Подтверждение удаления пользователя
            $('.delete-user').click(function() {
                const userId = $(this).data('userid');
                const username = $(this).data('username');

                Swal.fire({
                    title: 'Удаление пользователя',
                    html: `Вы уверены, что хотите удалить пользователя <strong>${username}</strong>?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#9fceb6',
                    confirmButtonText: 'Да, удалить',
                    cancelButtonText: 'Отмена',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post('@Url.Action("DeleteUser")', { userId: userId })
                            .done(function() {
                                Swal.fire({
                                    title: 'Успешно!',
                                    text: 'Пользователь был удален',
                                    icon: 'success'
                                }).then(() => location.reload());
                            })
                            .fail(function() {
                                Swal.fire({
                                    title: 'Ошибка!',
                                    text: 'Не удалось удалить пользователя',
                                    icon: 'error'
                                });
                            });
                    }
                });
            });

            // Плавное появление карточек
            $('.user-card').each(function(index) {
                $(this).css('animation-delay', `${index * 0.05}s`);
            });

            // Функция фильтрации карточек
            function filterUsers() {
                const searchText = $('#searchInput').val().toLowerCase();
                const selectedRole = $('#roleFilter').val();

                $('.user-card').each(function() {
                    const $card = $(this);
                    const username = $card.data('username');
                    const fullname = $card.data('fullname') || '';
                    const roles = $card.data('roles') || '';

                    // Проверка поискового запроса
                    const matchesSearch = searchText === '' ||
                        username.includes(searchText) ||
                        fullname.includes(searchText);

                    // Проверка фильтра по ролям
                    let matchesRole = true;
                    if (selectedRole) {
                        if (selectedRole === 'no-role') {
                            matchesRole = roles === '';
                        } else {
                            matchesRole = roles.includes(selectedRole);
                        }
                    }

                    // Показываем/скрываем карточку
                    if (matchesSearch && matchesRole) {
                        $card.removeClass('hidden');
                    } else {
                        $card.addClass('hidden');
                    }
                });

                // Обновляем счетчик видимых пользователей
                const visibleCount = $('.user-card:not(.hidden)').length;
                $('.total-users').text(`Всего пользователей: ${visibleCount}`);
            }

            // Обработчики событий для поиска и фильтрации
            $('#searchInput').on('input', filterUsers);
            $('#roleFilter').on('change', filterUsers);
        });
    </script>
}